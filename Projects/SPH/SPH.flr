# Smoothed Particle Hydrodynamics - 2D implementation in Fluorescence

uint PARTICLE_COUNT: 5000
uint HALF_PARTICLE_COUNT: 2500
uint DOUBLE_PARTICLE_COUNT: 10000

uint TILE_COUNT_X: 25
uint TILE_COUNT_Y: 25
uint TILE_COUNT: 1250
uint DOUBLE_TILE_COUNT: 2500

uint PARTICLE_CIRCLE_VERTS: 48

float GRAVITY: 0.0
float DELTA_TIME: 0.01667

# half of tile-width
float PARTICLE_RADIUS: 0.01

# TODO - dynamic mass per particle
float PARTICLE_MASS: 0.001

# TODO - tune these

slider_float TEST_SLIDER: 0.0 0.0 1.0
slider_float DISPLAY_RADIUS: 0.1 0.0 1.0

slider_float EOS_SOLVER_STIFFNESS: 0.5 0.0 1.0
slider_float EOS_SOLVER_COMPRESSIBILITY: 5.0 1.0 6.0
slider_float EOS_SOLVER_REST_DENSITY: 2.5 1.0 5.0

struct Uint { uint u; }
struct_size: 4

# double-buffered, each position is R8G8 quantized
structured_buffer packedPositions: Uint PARTICLE_COUNT

# double-buffered, each velocity is R16G16 half precision
structured_buffer packedVelocities: Uint DOUBLE_PARTICLE_COUNT

# double-buffered tileAddresses of each particle, maybe we can use a 
# more compact look-up
structured_buffer particleAddresses: Uint DOUBLE_PARTICLE_COUNT

structured_buffer packedDensities: Uint HALF_PARTICLE_COUNT
structured_buffer packedPressures: Uint HALF_PARTICLE_COUNT
structured_buffer packedAccelerations: Uint PARTICLE_COUNT

struct Tile {
  uint offset24count8;
}
struct_size: 4
# double-buffered
structured_buffer tilesBuffer: Tile DOUBLE_TILE_COUNT 

# dictionary per 32 particles, helps lookup tile info from particle idx
struct TileDict {
  uint tileBumpMask;
  uint startReducedTileIdx;
}
struct_size: 8
# TODO: really should be PARTICLE_COUNT / 32 ...
# structured_buffer tileDictionaryBuffer TileDict 256

structured_buffer reducedTilesBuffer: Uint TILE_COUNT

struct GlobalState {
  uint tileEntryAllocator;
  uint activeTileCount;
  uint bInitialized;
  uint bPhase;
}
struct_size: 16
structured_buffer globalStateBuffer: GlobalState 1

compute_shader CS_Tick: 1 1 1
compute_shader CS_ClearTiles: 32 1 1
compute_shader CS_UpdateParticles_Reserve: 32 1 1
compute_shader CS_AllocateTiles: 32 1 1
compute_shader CS_UpdateParticles_Insert: 32 1 1
compute_shader CS_ComputeDensities: 32 1 1
compute_shader CS_ComputePressures: 32 1 1
compute_shader CS_ComputeAccelerations: 32 1 1

# TASKS
compute_dispatch: CS_Tick 1 1 1
barrier: globalStateBuffer packedPositions packedVelocities tilesBuffer particleAddresses reducedTilesBuffer

compute_dispatch: CS_ClearTiles TILE_COUNT 1 1
barrier: tilesBuffer
compute_dispatch: CS_UpdateParticles_Reserve PARTICLE_COUNT 1 1
barrier: tilesBuffer globalStateBuffer 
compute_dispatch: CS_AllocateTiles TILE_COUNT 1 1
barrier: tilesBuffer packedPositions reducedTilesBuffer
compute_dispatch: CS_UpdateParticles_Insert PARTICLE_COUNT 1 1
barrier: tilesBuffer packedPositions, packedVelocities particleAddresses 
compute_dispatch: CS_ComputeDensities TILE_COUNT 1 1
barrier: tilesBuffer 
compute_dispatch: CS_ComputePressures TILE_COUNT 1 1
barrier: tilesBuffer 
compute_dispatch: CS_ComputeAccelerations TILE_COUNT 1 1
barrier: tilesBuffer 

display_pass:
#  draw: VS_Tiles PS_Tiles 3 1
  draw: VS_Tiles PS_TilesDensity 3 1
  draw: VS_Particles PS_Particles PARTICLE_CIRCLE_VERTS PARTICLE_COUNT