enable_feature: perspective_camera

uint CELLS_X: 200
uint CELLS_Y: 150
uint CELLS_Z: 200
uint CELLS_COUNT: CELLS_X * CELLS_Y * CELLS_Z
uint HALF_CELLS_COUNT: CELLS_COUNT / 2
uint QUARTER_CELLS_COUNT: CELLS_COUNT / 4

float H: 1.0 / SCREEN_WIDTH

slider_uint SLICE_IDX: 100 0 199
slider_float VEL_DAMPING: 1.0 0.8 1.0
slider_float JITTER: 8.5 0.01 10.0
slider_float PRESSURE_JITTER: 0.1 0.001 1.0
slider_uint CLAMP_MODE: 0 0 1
slider_uint RENDER_MODE: 0 0 3
slider_float MAX_VELOCITY: 330.0 100.0 4000.0
slider_float MAX_PRESSURE: 0.01 0.001 1.0
float DELTA_TIME: 1.0 / 30.0
slider_uint BACKGROUND: 3 0 3
slider_float RAYMARCH_ITERS: 150 50 200
slider_float RAYMARCH_STEP_SIZE: 1.0 0.01 2.0
slider_float DENSITY_CUTOFF: 0.13 0.01 2.0
slider_float DENSITY_MULT: 1.0 0.1 10.0
slider_uint LIGHT_ITERS: 5 1 50
slider_float LIGHT_THETA: 0.0 0.0 4.0
slider_float LIGHT_STRENGTH: 1.0 1.0 20.0

struct GlobalState {
  uint initialized;
}
struct_size: 4
structured_buffer globalStateBuffer: GlobalState 1

struct ExtraFields {
  vec4 color; // TODO: turn into id or quantized color
};
struct_size: 16

struct Uint { uint u; }
struct_size: 4
struct Float { float f; }
struct_size: 4
struct U16x2 { uint packed; }
struct_size: 4

structured_buffer velocityField: Uint CELLS_COUNT
structured_buffer advectedVelocityField: Uint CELLS_COUNT

structured_buffer extraFields: ExtraFields CELLS_COUNT
structured_buffer advectedExtraFields: ExtraFields CELLS_COUNT

# TODO quantize divergence and pressure
structured_buffer divergenceField: Float CELLS_COUNT
structured_buffer pressureFieldA: U16x2 HALF_CELLS_COUNT
structured_buffer pressureFieldB: U16x2 HALF_CELLS_COUNT

compute_shader CS_HandleInput: 1 1 1
compute_shader CS_InitVelocity: 32 1 1
compute_shader CS_AdvectVelocity: 32 1 1
compute_shader CS_AdvectColor: 32 1 1
compute_shader CS_ComputeDivergence: 32 1 1
compute_shader CS_ComputePressureA: 32 1 1
compute_shader CS_ComputePressureB: 32 1 1
compute_shader CS_ResolveVelocity: 32 1 1

compute_dispatch: CS_HandleInput 1 1 1
barrier: globalStateBuffer
compute_dispatch: CS_InitVelocity CELLS_COUNT 1 1
barrier: velocityField, advectedVelocityField, extraFields, advectedExtraFields, pressureFieldA, pressureFieldB
compute_dispatch: CS_AdvectVelocity CELLS_COUNT 1 1
barrier: velocityField, advectedVelocityField
compute_dispatch: CS_ComputeDivergence CELLS_COUNT 1 1
barrier: divergenceField

compute_dispatch: CS_ComputePressureA CELLS_COUNT 1 1
barrier: pressureFieldB
compute_dispatch: CS_ComputePressureB CELLS_COUNT 1 1
barrier: pressureFieldA
compute_dispatch: CS_ComputePressureA CELLS_COUNT 1 1
barrier: pressureFieldB
compute_dispatch: CS_ComputePressureB CELLS_COUNT 1 1
barrier: pressureFieldA
compute_dispatch: CS_ComputePressureA CELLS_COUNT 1 1
barrier: pressureFieldB
compute_dispatch: CS_ComputePressureB CELLS_COUNT 1 1
barrier: pressureFieldA

compute_dispatch: CS_ResolveVelocity CELLS_COUNT 1 1
barrier: velocityField
compute_dispatch: CS_AdvectColor CELLS_COUNT 1 1
barrier: advectedExtraFields, velocityField

display_pass:
  draw: VS_Display PS_Display 3 1
