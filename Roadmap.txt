FLUORESCENCE ROADMAP:

Current State:
- Simple .flr file format
- Can specify struct defs, resource declarations, constants
- Can declare compute shaders, organize dispatches, issue barriers
- Can specify display passes, that uses the same resources 

Upcoming:
-[x] CTRL + O: better open-project / create new project dialogue
-[ ] Need portfolio of simple practice / demo projects!
-[ ] Ideas: mandelbrot set, simple uniform grid particle collision system, flocking sim 
-[ ] Fluid sim, SPH, diffusion-reaction sim, etc!
- 

Feature Roadmap:
-[x] Generic vert / frag shader, with specified vertex count 
-[x] Auto user uniforms - can generate Imgui UI with sliders, checkboxes etc 
-[x] Can automatically bind and make available uniform buffer in shader, by same name
-[x] Simple expressions parser
-[x] Opt-in feature presets: perspective_camera
-[ ] autogenerated template file, based on .flr EX:
-[ ] creates stubs for all declared shader entry points...
- 

- SETUP README!!

Other TODOs:
- [ ] Improved generated file caching
- [x] Allow for reload of flr file? CTRL+SHIFT+R ??


- compute / shading graphs
- focus on 2d for now


Backlog:
- integration with vscode??

graph concept:
- define resources
- define shaders, that declare resource usage
- define shader execution order, left-to-right
- exact stages determined by resource usage...
- 

Graph UI:
- Nodes, layouts, bezier curve connectors
- Grid-alignments?
- 2d node-colliders
- basic 2d springs in layout manager
- .flr projects

graph editor
- 